from vkbottle.bot import Message, BotLabeler
from utils.chat_settings import get_chat_setting
import json
import os

labeler = BotLabeler()
labeler.vbml_ignore_case = True

@labeler.message(text=["–º—É—Ä–∞ –∏–Ω—Ñ–æ", "–º—É—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "mura info"])
async def mura_info_handler(message: Message):
    peer_id = str(message.peer_id)

    # –®–∞–Ω—Å –æ—Ç–≤–µ—Ç–∞ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    chance = get_chat_setting(peer_id, "mura_chance", 0)

    # –ü—É—Ç—å –∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
    stats_file = "mura/chat_stats.json"
    message_count = 0

    if os.path.exists(stats_file):
        with open(stats_file, "r", encoding="utf-8") as f:
            stats = json.load(f)
            top_chats = stats.get("graphs", {}).get("top_chats", [])
            for chat_id, count in top_chats:
                if chat_id == peer_id:
                    message_count = count
                    break

    text = (
        "ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–±–æ—Ç–µ –ú—É—Ä—ã –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ:\n\n"
        f"üîÅ –®–∞–Ω—Å –æ—Ç–≤–µ—Ç–∞: {chance}%\n"
        f"üí¨ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –±–∞–∑–µ: {message_count}"
    )

    await message.answer(text)
